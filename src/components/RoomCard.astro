---
import Bed from "@/atoms/icons/Bed.astro";
import Person from "@/atoms/icons/Person.astro";

interface Props {
    title: string;
    capacity: number;
    beds: number[];
    imageSrc: string;
}

const { title, capacity, imageSrc, beds } = Astro.props;
---

<div
    class="card border-2 border-solid border-slate-300 overflow-hidden shadow-md shadow-gray-800 relative transition-colors duration-300 hover:bg-gray-950/90 hover:text-white pb-1"
>
    <div class="inner relative z-40">
        <div
            class="mb-2 h-48 w-full overflow-hidden shadow-md shadow-gray-700"
        >
            <img
                src={imageSrc}
                class="w-full h-full object-cover object-center"
                loading="lazy"
                alt={`${title}`}
            />
        </div>
        <div>
            <h3 class="text-center text-xl">{title}</h3>
            <div class="flex justify-center gap-x-4">
                <i class="flex items-center"
                    ><Person /> <span class="text-xl">{capacity}</span></i
                >
                <div class="flex gap-x-1">
                    {
                        beds.map((numberOfBeds, index) => (
                            <>
                                <i class="flex items-center">
                                    <Bed />{" "}
                                    <span class="text-xl">{numberOfBeds}</span>
                                </i>
                                {index < beds.length - 1 && (
                                    <span class="mt-1">รณ</span>
                                )}
                            </>
                        ))
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="corner top-2 left-2 border-t-2 border-l-2"></div>
    <div class="corner top-2 right-2 border-t-2 border-r-2"></div>
    <div class="corner bottom-2 left-2 border-b-2 border-l-2"></div>
    <div class="corner bottom-2 right-2 border-b-2 border-r-2"></div>
</div>

<style>
    .corner {
        border-color: transparent;
        border-style: solid;
        position: absolute;
        width: 0px;
        height: 0px;
    }

    .card:hover .corner {
        transition:
            width 500ms ease-in,
            height 500ms ease-in,
            border-color 200ms ease-in;
        border-color: #fff;
        width: 50%;
        height: 50%;
    }

    .inner {
        transition: transform 200ms ease-out;
    }

    .card:hover .inner {
        transition-timing-function: ease-in;
        color: #fff !important; 
        transform: scale(.85);
    }
</style>
